* What are the parts of reddit?


I've got a Flask app running. What are the views that are needed for it
- [ ] Starts with an Index page, which is the landing page
  - [ ] Every page has a navbar
    - [ ] Home/index page -> back to home
    - [ ] Profile page -> profile page
    - [ ] Login -> login screen
    - [ ] Search form -> search results page
  - [X] Shows top 5 posts
  - [X] Has pagination for more top posts, 5 at a time
    - [X] Shows more pages only if more posts exist
    - [X] If possible, shows two pages on either side of your current page
    - [X] Each page number takes you to that page
  - [X] Each post title is a link to that post
- [ ] Profile page
  - [ ] Shows username
  - [ ] Shows all posts by that user
  - [ ] Has the option to change password
  - [ ] Has the option to delete account
- [ ] Login page
  - [ ] Displays form for a username and a password, and a login button
  - [ ] Upon login, redirects to homepage
- [ ] Search results page
  - [ ] Displays all posts that match search query
- [ ] Post page
  - [ ] Shows post title and author at the top
  - [ ] Below is content related to the post
  - [ ] Below that are nested comments
    - What is the best way to store them?
      - They could be stored as
  - [ ] What other attributes should posts have?
    - [ ] Upvotes and downvotes, along with a display
- [ ] JSON/database to store user and post data
- [ ] Submit page for new posts

- Bitcoin aspect
  - Every user needs a stored amount and a way to add more
  - Every post needs a going rate of amount that they must pay into 'escrow' to comment
  - There needs to be a going rate for new posts
  - Mechanisms to return amounts after 24 hours
  - Should it be one payment to comment on a post multiple times, or one payment per comment
  - System for flagging posts that aren't suitable


- It has:
  - A front end, which acts as the UI
    - When somebody navigates to the site, the server sends them front end code as html
    - The html displays the information they need
    - If they enter some new info into the html, it gets sent back to the server

  - A back end
    - The back end is a program running on the server
    - When requests come in for content, it generates and supplies the html
    - The specific data that needs to be filled into that html is pulled from a database on the server
    - When data is sent to the back end, it needs to put it in the database in the right location


- The functionality needed is:
  - A user needs to be able to log in with a unique username and password
  - User needs to be able to create a new thread, including a link or new content
  - User needs to be able to edit or delete a thread
  - User needs to be able to comment on a thread or a comment within that thread
  - User needs to be able to upvote and downvote threads and comments

- Data that must be stored:
  - Usernames and password pairs in
  - Thread titles and content
  - Comment content
  - Relationships between threads and comments

